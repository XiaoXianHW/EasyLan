buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath('org.nanohttpd:nanohttpd:2.3.1')
    }
}

apply plugin: 'net.minecraftforge.gradle'

version = '1.5'
group = 'org.xiaoxian.easylan'
archivesBaseName = 'easylan'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.17.1'
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.17.1-37.1.1'
    implementation 'org.nanohttpd:nanohttpd:2.3.1'
}

configurations {
    customJarConfiguration {
        canBeResolved = true
        canBeConsumed = false
        extendsFrom implementation
    }
}

jar {
    manifest {
        attributes([
                "Implementation-Title": project.name,
                "Implementation-Version": "1.5",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from {
        configurations.customJarConfiguration.filter {
            it.name.contains('nanohttpd')
        }.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    eachFile { file ->
        if (file.name == 'LICENSE.txt') {
            file.exclude()
        }
    }
}

jar.finalizedBy('reobfJar')
